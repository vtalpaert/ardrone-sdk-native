name: Build ARSKD into a tarball - ubuntu-22.04
on: [push]
jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-22.04
            arch: x64
          - os: ubuntu-22.04-arm
            arch: arm64
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
    env:
      TAR_FILE: arsdk-native-samples-${{ matrix.arch }}-master.tar.gz
      TAR_CONTENT_DIR: out/arsdk-native/staging/
    steps:
      - name: Install dependencies
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: repo autoconf libavahi-client-dev libavcodec-dev libavformat-dev libswscale-dev
          version: 1.0-${{ matrix.arch }}
      - uses: actions/checkout@v4
      - name: Set up Python 3.8
        uses: actions/setup-python@v5
        with:
          python-version: "3.8"
      - name: Cache build
        uses: actions/cache@v4
        with:
          key: sdk-${{ matrix.arch }}
          path: |
            arsdk
            !arsdk/.repo
      - name: repo
        run: |
          mkdir -p arsdk && cd arsdk
          repo init -u https://github.com/Parrot-Developers/arsdk_manifests.git
          repo sync
      - name: Build SDK and samples
        run: |
          cd arsdk
          ./build.sh -p native -tt # list all tasks for native platform
          ./build.sh -p native -t build-sdk -j 3
          ./build.sh -p native -t build-sample-JumpingSumoSample -j 3
          ./build.sh -p native -t build-sample-BebopSample -j 3
          cd ..
      - name: Create tarball
        run: |
          cp parrot_license.md arsdk/$TAR_CONTENT_DIR
          find arsdk/$TAR_CONTENT_DIR -printf "%P\n" | tar -cvzf $TAR_FILE --no-recursion -C arsdk/$TAR_CONTENT_DIR -T -
      - name: Archive artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-content-${{ matrix.arch }}
          path: |
            *.tar.gz
            release_note.md
  release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    steps:
      - name: Get artifact
        uses: actions/download-artifact@v4
        with:
          pattern: release-content-*
          merge-multiple: true
      - name: Release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifactErrorsFailBuild: true
          # artifactContentType: 
          artifacts: "*.tar.gz"
          bodyFile: "release_note.md"
